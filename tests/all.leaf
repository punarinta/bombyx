var starting_time = microtime()

# =========================================

print('IF-clause test: ')

if (2 + 2 == 4)
{
	print('OK\n')
}
else
{
	print('not OK\n')
}

# =========================================

print('ELSE-clause test: ')

if (2 + 2 == 5)
{
	print('not OK\n')
}
else
{
	print('OK\n')
}

# =========================================

print('Assigning variable: ')

var a = 42

if (a != 42)
{
	print('not ')
}

print('OK\n')

# =========================================

print('Reassigning variable: ')

a = 43

if (a != 43)
{
	print('not ')
}

print('OK\n')

# =========================================

print('Increment: ')

++a

if (a != 44)
{
	print('not ')
}

print('OK\n')

# =========================================

print('Decrement: ')

--a

if (a != 43)
{
	print('not ')
}

print('OK\n')

# =========================================

print('Unary minus: ')

if (4-6 != -2)
{
	print('not ')
}

print('OK\n')

# =========================================

print('Floating point ops: ')

a = 5.56 + 7.62

if (a != 13.18)
{
	print('not ')
}

print('OK\n')

# =========================================

print('Characters support:\n')
print(' - just UTF: ÅÄÖ åäö ¢€\n')
print(' - 0x0A** symbols: ਅਊ→ (must be on one line)\n')
print(' - 0x0D** symbols: അഋ→ (must be on one line)\n')

# =========================================

print('Blocks (b1, b1.b2):\n')

block b1
{
    block b2
    {
        print('b1.b2() should return 95\n')
        return 95
    }

    print('b1() is OK\n')
}

b1()
print('Return value = ' + b1.b2() + '\n')

# =========================================

print('\nExecution took: ' + (microtime() - starting_time) + ' microsecond(s).\n')
